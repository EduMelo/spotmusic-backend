# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Requirements
        run:  pip install flask flask-wtf

      - name: Annotate spec with image tag
        uses: cschleiden/replace-tokens@v1
        with:
          files: Dockerfile
        env:
          CLOUD_SQL_USERNAME: ${{ vars.CLOUD_SQL_USERNAME }}

      - name: Annotate spec with image tag
        uses: cschleiden/replace-tokens@v1
        with:
          files: Dockerfile
        env:
          CLOUD_SQL_PASSWORD: ${{ secrets.CLOUD_SQL_PASSWORD }}

      - name: Annotate spec with image tag
        uses: cschleiden/replace-tokens@v1
        with:
          files: Dockerfile
        env:
          CLOUD_SQL_DATABASE_NAME: ${{ vars.CLOUD_SQL_DATABASE_NAME }}

      - name: Annotate spec with image tag
        uses: cschleiden/replace-tokens@v1
        with:
          files: Dockerfile
        env:
          DB_LOCAL_HOST: ${{ vars.DB_LOCAL_HOST }}

      - name: Annotate spec with image tag
        uses: cschleiden/replace-tokens@v1
        with:
          files: Dockerfile
        env:
          CLOUD_SQL_CONNECTION_NAME: ${{ vars.CLOUD_SQL_CONNECTION_NAME }}

      - name: Docker Login
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest . 
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  # Deploy-Homolog:
  #   needs: Build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3 # https://github.com/actions/checkout

  #     - name: Auth GCP
  #       uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
  #       with:
  #         credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

  #     - name: Cloud Run Deploy - Homolog
  #       id: homolog-deploy
  #       uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
  #       with:
  #         service: ${{ vars.GOOGLE_MYAPP }}-homolog
  #         image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
  #         flags: '--allow-unauthenticated'

  #     - name: Test Homolog
  #       run: 'curl "${{ steps.homolog-deploy.outputs.url }}"'

  Deploy-Production:
    # needs: Deploy-Homolog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3 # https://github.com/actions/checkout

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy - Production
        id: prod-deploy
        uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
        with:
          service: ${{ vars.GOOGLE_MYAPP }}-prod
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
          flags: '--allow-unauthenticated'

      - name: Test Prod
        run: 'curl "${{ steps.prod-deploy.outputs.url }}"'